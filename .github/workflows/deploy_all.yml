name: Deploy all contracts
on:
  workflow_dispatch:
    inputs:
      profile:
        description: 'Profile'
        required: true
        default: 'testnet'
        type: choice
        options:
        - testnet
        - mainnet

      alias:
        description: 'Account alias'
        required: true
        default: 'carbonable'
        type: choice
        options:
        - carbonable

      wallet:
        description: 'Wallet type'
        required: true
        default: 'starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount'
        type: choice
        options:
        - starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount
        
      project:
        description: |
          Carbonable project inputs (;-sep)<br>
          - Name<br>
          - Symbol
        default: 'name;symbol'
        required: false
        type: string
        
      minter:
        description: 'Carbonable minter inputs (;-sep)'
        default: '0x1234;0;5;10;10;3'
        required: false
        type: string

      transfer:
        description: 'Transfer ownership to minter'
        default: true
        required: true
        type: boolean

permissions:
  contents: read

jobs:
  parser:
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.project.outputs.name }}
      project_symbol: ${{ steps.project.outputs.symbol }}
      minter_payment_token_address: ${{ steps.minter.outputs.payment_token_address }}
      minter_public_sale_open: ${{ steps.minter.outputs.public_sale_open }}
      minter_max_buy_per_tx: ${{ steps.minter.outputs.max_buy_per_tx }}
      minter_unit_price: ${{ steps.minter.outputs.unit_price }}
      minter_max_supply_for_mint: ${{ steps.minter.outputs.max_supply_for_mint }}
      minter_reserved_supply_for_mint: ${{ steps.minter.outputs.reserved_supply_for_mint }}
    steps:
      - name: Parse project
        id: project
        run: |
          IFS=';' read -ra args <<< "${{ inputs.project }}"
          echo "::set-output name=name::${args[0]}"
          echo "::set-output name=symbol::${args[1]}"
      - name: Parse minter
        id: minter
        run: |
          IFS=';' read -ra args <<< "${{ inputs.minter }}"
          echo "::set-output name=payment_token_address::${args[0]}"
          echo "::set-output name=public_sale_open::${args[1]}"
          echo "::set-output name=max_buy_per_tx::${args[2]}"
          echo "::set-output name=unit_price::${args[3]}"
          echo "::set-output name=max_supply_for_mint::${args[4]}"
          echo "::set-output name=reserved_supply_for_mint::${args[5]}"

  project:
    needs: parser
    uses: ./.github/workflows/deploy_project.yml
    with:
      profile: ${{ inputs.profile }}
      alias: ${{ inputs.alias }}
      wallet: ${{ inputs.wallet }}
      project_name: ${{ needs.parser.outputs.project_name }}
      project_symbol: ${{ needs.parser.outputs.project_symbol }}
    secrets: inherit

  minter:
    needs: [parser, project]
    uses: ./.github/workflows/deploy_minter.yml
    with:
      profile: ${{ inputs.profile }}
      alias: ${{ inputs.alias }}
      wallet: ${{ inputs.wallet }}
      minter_carbonable_project_address: ${{ needs.project.outputs.contract_address }}
      minter_payment_token_address: ${{ needs.parser.outputs.minter_payment_token_address }}
      minter_public_sale_open: ${{ needs.parser.outputs.minter_public_sale_open }}
      minter_max_buy_per_tx: ${{ needs.parser.outputs.minter_max_buy_per_tx }}
      minter_unit_price: ${{ needs.parser.outputs.minter_unit_price }}
      minter_max_supply_for_mint: ${{ needs.parser.outputs.minter_max_supply_for_mint }}
      minter_reserved_supply_for_mint: ${{ needs.parser.outputs.minter_reserved_supply_for_mint }}
    secrets: inherit

  ownership:
    needs: [project, minter]
    if: ${{ inputs.transfer }}
    uses: ./.github/workflows/transfer_ownership.yml
    with:
      profile: ${{ inputs.profile }}
      alias: ${{ inputs.alias }}
      wallet: ${{ inputs.wallet }}
      project_contract: ${{ needs.project.outputs.contract_address }}
      minter_contract: ${{ needs.minter.outputs.contract_address }}
    secrets: inherit

    