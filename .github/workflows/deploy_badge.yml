name: Deploy a Carbonable Badge
on:
  workflow_call:
    inputs:
      profile:
        required: true
        type: string

      alias:
        required: true
        type: string

      wallet:
        required: true
        type: string
        
      badge_uri:
        required: true
        type: string

      badge_name:
        required: true
        type: string

    outputs:
      contract_address:
        description: Carbonable badge contract address
        value: ${{ jobs.deploy.outputs.contract }}

  workflow_dispatch:
    inputs:
      profile:
        description: 'Profile'
        required: true
        default: 'testnet'
        type: choice
        options:
        - testnet
        - mainnet

      alias:
        description: 'Account alias'
        required: true
        default: 'carbonable'
        type: choice
        options:
        - carbonable

      wallet:
        description: 'Wallet type'
        required: true
        default: 'starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount'
        type: choice
        options:
        - starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount

      badge_uri:
        description: 'Carbonable badge uri base'
        required: true
        type: string
        
      badge_name:
        description: 'Carbonable badge name'
        default: 'Carbonable ERC-1155 Test'
        required: true
        type: string

permissions:
  contents: read

env:
  COMPILED_SOURCE: ./build/CarbonableBadge.json
  PROTOSTAR_TOML_FILE: ./protostar.toml
  PROTOSTAR_VERSION: 0.4.2

jobs:
  deploy:
    runs-on: ubuntu-latest

    outputs:
      contract: ${{ steps.deploy.outputs.contract }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install python dependencies
        run: |
          sudo apt install -y libgmp3-dev
          python -m pip install --upgrade pip
          pip install cairo-lang==0.10.0

      - name: Set up protostar
        run: |
          curl -L https://raw.githubusercontent.com/software-mansion/protostar/master/install.sh | bash -s -- -v $PROTOSTAR_VERSION

      - name: Install protostar dependencies
        run: /home/runner/.protostar/dist/protostar/protostar install
        
      - name: Compile smart contract
        run: /home/runner/.protostar/dist/protostar/protostar build

      - name: Set up admin account
        run: |
          mkdir /home/runner/.starknet_accounts
          echo "$ACCOUNT" > "/home/runner/.starknet_accounts/starknet_open_zeppelin_accounts.json"
        env:
          ACCOUNT: ${{ secrets.ADMIN_ACCOUNT }}

      - name: Deploy smart contract
        id: deploy
        run: |
          source ./scripts/logging.sh
          source ./scripts/tools.sh
          source ./scripts/converter.sh
          source ./scripts/starknet.sh
          uri_len=${#URI}
          uri=$(str_to_hexs "$URI")
          name=$(str_to_hex "${{ inputs.badge_name }}")
          owner=$(get_account_address "${{ inputs.alias }}" "/home/runner/.starknet_accounts/starknet_open_zeppelin_accounts.json")
          options="--profile $PROFILE deploy $COMPILED_SOURCE --inputs $uri_len $uri $name $owner"
          command="/home/runner/.protostar/dist/protostar/protostar $options"
          network=$(get_network "$PROFILE" "$PROTOSTAR_TOML_FILE")
          contract_address=$(send_transaction "$command" "$network")
          echo "::set-output name=contract::$contract_address"
        env:
          URI: ${{ inputs.badge_uri }}
          PROFILE: ${{ inputs.profile }}
          STARKNET_WALLET: ${{ inputs.wallet }}